name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build --no-daemon
        shell: bash

      - name: Check .env file creation
        run: |
          echo "Creating .env file..."
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" > .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=study" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo ".env file created:"
          ls -la .env
          echo "Content check (without sensitive data):"
          echo "MYSQL_DATABASE=study" 
          echo "Other variables are set but hidden for security"

      - name: Build Docker Image
        run: docker build -t spring-app .

      - name: Start services with Docker Compose
        run: |
          echo "Starting services..."
          docker compose up --build -d
          echo "Services started, checking status:"
          docker compose ps

      - name: Wait for services to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          timeout 60 bash -c 'until docker compose exec -T db mysqladmin ping --silent; do echo "Waiting for MySQL..."; sleep 3; done'
          echo "MySQL is ready!"
          
          echo "Checking if Spring Boot app container is running..."
          docker compose ps
          
          echo "Checking Spring Boot app logs..."
          docker compose logs app
          
          echo "Waiting for Spring Boot app to be ready..."
          timeout 120 bash -c 'until curl -f http://localhost:8080/actuator/health >/dev/null 2>&1; do echo "Waiting for Spring Boot..."; sleep 5; done'
          
          echo "All services are ready!"

      - name: Show service logs (for debugging)
        if: failure()
        run: |
          echo "=== MySQL logs ==="
          docker compose logs db
          echo "=== Spring App logs ==="
          docker compose logs app

      - name: Run health check
        run: |
          echo "Testing application health..."
          curl -f http://localhost:8080/actuator/health
          echo "Health check passed!"

      - name: Build and tag Docker image for deployment
        if: github.ref == 'refs/heads/main'
        run: |
          docker build -t spring-app:${{ github.sha }} .
          docker build -t spring-app:latest .

      - name: Deploy to AWS EC2
        if: github.ref == 'refs/heads/main'
        run: |
          # AWS 배포 로직이 들어갈 곳
          echo "Deployment step will be implemented here"

      - name: Cleanup
        if: always()
        run: |
          docker compose down -v
          docker system prune -f
